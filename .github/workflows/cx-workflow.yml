# Checkmarx Documentation can be found at:
# https://docs.checkmarx.com/en/34965-68702-checkmarx-one-github-actions.html
# The additional_params field, you can specify any CLI arguments that you would like to apply to scans of this project.

# NOTE: This pipeline is configured to perform only Software Composition Analysis (SCA) scans, leveraging the SCA Resolver to manage and resolve dependencies

name: Checkmarx One - SCA Scan With SCA Resolver (Maven Resolution)
on:
  pull_request:
    types:
     - opened
     - synchronize
     - closed
    branches:
      - main  
  workflow_dispatch:  
  
jobs:
  # This workflow contains a single job called "build"
  build:    
    runs-on: ubuntu-latest
    steps:     
      - name: Checkout
        uses: actions/checkout@v2

      - name: Java Version
        run: |
          java -version
        

      #Refer to:
      #  https://docs.checkmarx.com/en/34965-19198-installing-supported-package-managers-for-resolver.html#UUID-6a56714b-6836-a1e0-3c21-d1fbb411cf4d_id_InstallingSupportedPackageManagersforResolver-PIPDependencyResolver
      #  https://maven.apache.org/install.html
      #  https://archive.apache.org/dist/maven/maven-3/
      
      - name: Prepare Maven Env  using latest Maven Version
        run: |
          sudo apt-get install maven
          mvn --version
        
      #- name:  Prepare Maven Env using especific version
      #  run: | 
      #    wget https://archive.apache.org/dist/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz -P ${{ runner.temp }}
      #    mkdir ~/maven
      #    tar xf ${{ runner.temp }}/apache-maven-3.8.6-bin.tar.gz -C ~/maven 

      #- name: If using a diferent version form the latest, define env variables and test version
      #  run: |
      #    export MAVEN_HOME=~/maven/apache-maven-3.8.6
      #    export PATH=$MAVEN_HOME/bin:$PATH
      #    source ~/.bashrc
      #    mvn -version

      # NOTE: the mvn must be executed on the root of the project source !!!!!
      - name: Test dependency tree
        run: |          
          mvn dependency:tree
      
      # Refer to: https://docs.checkmarx.com/en/34965-19197-checkmarx-sca-resolver-download-and-installation.html
      - name: Download SCA
        run: | 
          wget "https://sca-downloads.s3.amazonaws.com/cli/latest/ScaResolver-linux64.tar.gz" 
          tar -xvzf "ScaResolver-linux64.tar.gz"
          rm "ScaResolver-linux64.tar.gz"

      # #Refer to https://docs.checkmarx.com/en/34965-68643-scan.html#UUID-a0bb20d5-5182-3fb4-3da0-0e263344ffe7_id_scancreate-CheckmarxSCAResolver
      - name: Create cx-results Path
        run: mkdir cx-results
        
      # NOTE: Change the -s agument according to the path of your source code!!!!!!!
      - name: Execute SCA On Offline mode
        run: ./ScaResolver offline -r "./cx-results/.cxsca-results.json" -s "." --project-name "${{ github.repository }}"       
      
      - name: Checkmarx AST Github Action
         # You may pin to the exact commit or the version.        
        uses: checkmarx/ast-github-action@main
        with:
           # Provide the AST portal URL
           base_uri: https://eu.ast.checkmarx.net/
           # Provide the Tenant for AST portal URL
           cx_tenant: ${{ secrets.CXONE_TENANT }}
           # Client ID for AST portal authentication
           cx_client_id: ${{ secrets.CXONE_CLIENTID }}
           # Secret key for AST portal authentication
           cx_client_secret: ${{ secrets.CXONE_CLIENTSECRET }}
           # Select a Checkmarx Project Name
           # optional, default is ${{ github.repository }}
           project_name: ${{ github.repository }}
           # Branch name
           # optional, default is ${{ github.head_ref || github.ref }}
           branch: ${{ github.head_ref || github.ref }}
           # GitHub API Token
           # optional, default is ${{ github.token }}
           github_token: ${{ secrets.PR_TOKEN }}          
           # optional, default is ${{ github.event.repository.name }}
           repo_name: ${{ github.event.repository.name }}
           # Organization name to create the Pr comment
           # optional, default is ${{ github.repository_owner }}
           namespace: ${{ github.repository_owner }}
           # Pr Number of the pull request that needs the decoration
           # optional, default is ${{ github.event.number }}
           pr_number: ${{ github.event.number }}
           # Source for SCA Scan 
           source_dir: "./cx-results" 
           # Additional parameters for AST scan
           additional_params: --scan-types "sca" --tags "Using SCA Resolver"            
